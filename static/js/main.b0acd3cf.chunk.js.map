{"version":3,"sources":["context/TaskListContext.js","components/Task.js","components/TaskList.js","components/TaskForm.js","components/Header.js","components/App.js","index.js"],"names":["TaskListContext","createContext","TaskListContextProvider","props","initialState","JSON","parse","localStorage","getItem","useState","tasks","setTasks","useEffect","setItem","stringify","editItem","setEditItem","Provider","value","addTask","title","id","uuid","removeTask","filter","task","clearList","findItem","item","find","editTask","newTasks","map","console","log","children","Task","useContext","className","onClick","TaskList","length","TaskForm","setTitle","onSubmit","e","preventDefault","onChange","target","type","placeholder","required","Header","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b0acd3cf.chunk.js","sourcesContent":["import React, {createContext, useState, useEffect} from 'react';\nimport { uuid } from 'uuidv4';\n\nexport const TaskListContext = createContext();\n\nconst TaskListContextProvider = props => {\n    const initialState = JSON.parse(localStorage.getItem('tasks')) || [];\n\n    const [tasks, setTasks] = useState([]);\n\n    useEffect(()=> {\n        localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n    }, [tasks]);\n\n    const [editItem, setEditItem] = useState(initialState);\n\n    const addTask = title => {\n        setTasks([...tasks, { title, id: uuid() }]);\n    };\n\n    const removeTask = id => {\n        setTasks(tasks.filter(task => task.id !== id))\n    };\n\n    const clearList = () => {\n        setTasks([])\n    };\n\n    const findItem = id => {\n        const item = tasks.find(task => task.id === id);\n\n        setEditItem(item);\n    };\n\n    const editTask = (title, id) => {\n        const newTasks = tasks.map(task => (task.id === id ? { title, id } : task));\n\n        console.log(newTasks)\n\n        setTasks(newTasks);\n        setEditItem(null);\n    };\n\n    return (\n        <TaskListContext.Provider \n        value={{\n            tasks, \n            addTask, \n            removeTask, \n            clearList, \n            findItem, \n            editTask, \n            editItem}}\n            >\n            {props.children}\n        </TaskListContext.Provider>\n    );\n};\n\nexport default TaskListContextProvider;\n\n\n","import React, {useContext} from 'react';\nimport {TaskListContext} from '../context/TaskListContext';\n\nconst Task = ({ task }) => {\n    const {removeTask, findItem} = useContext(TaskListContext)\n\n    return (\n        <li className=\"list-item\">\n            <span>{task.title}</span>\n            <div>\n                <button \n                onClick={() => removeTask(task.id)} \n                className=\"btn-delete task-btn\">\n                    <i className=\"fas fa-trash-alt\"></i>\n                </button>\n                <button \n                onClick={() => findItem(task.id)}\n                className=\"btn-edit task-btn\">\n                    <i className=\"fas fa-pen\"></i>\n                </button>\n            </div>\n        </li>\n    )\n}\n\nexport default Task;","import React, {useContext} from 'react';\nimport {TaskListContext} from '../context/TaskListContext';\nimport Task from \"../components/Task\";\n\nconst TaskList = () => {\n    const { tasks } = useContext(TaskListContext);\n    return (\n        <div>\n            {tasks.length ? (\n                <ul className=\"list\">\n                    {tasks.map(task => {\n                        return <Task task={task} key={task.id} />;\n                    })}\n                </ul>\n            ) : (\n                <div className=\"no-tasks\">No Tasks</div>\n            )}\n        </div>\n    );\n};\n\nexport default TaskList;\n\n\n\n","import React, {useContext, useState, useEffect} from 'react';\nimport {TaskListContext} from '../context/TaskListContext';\n\nconst TaskForm = () => {\n    const { addTask, clearList, editItem, editTask } = useContext(TaskListContext);\n\n    const [title, setTitle] = useState(\"\")\n\n    const handleChange = e => {\n        setTitle(e.target.value);\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        if(!editItem) {\n            addTask(title);\n            setTitle(\"\");\n        } else {\n            editTask(title, editItem.id);\n        }\n        \n    };\n    \n    useEffect (() => {\n        if(editItem){\n            setTitle(editItem.title);\n            console.log(editItem);\n        } else {\n            setTitle(\"\");\n        }\n    }, [editItem]);\n\n    return (\n        <form onSubmit= {handleSubmit} className=\"form\">\n            <input \n            onChange={handleChange}\n            value={title}\n            type=\"text\"\n            className=\"task-input\"\n            placeholder=\"Add Task...\"\n            required />\n            <div className=\"buttons\">\n                <button type=\"submit\" \n                className=\"btn add-task-btn\">\n                {editItem ? 'Edit Task' : 'Add Task'}\n                </button>\n                <button onClick={clearList} \n                className=\"btn clear-btn\">Clear</button>\n            </div>\n        </form>\n    );\n};\n\nexport default TaskForm;\n","import React from 'react';\n\nconst Header = () => {\n    return (\n        <div className=\"header\">\n            <h1>Task Manager</h1>\n        </div>\n    );\n};\n\nexport default Header;\n","import React from 'react';\nimport TaskList from '../components/TaskList';\nimport TaskForm from '../components/TaskForm';\nimport Header from '../components/Header';\nimport TaskListContextProvider from '../context/TaskListContext';\nimport '../components/App.css';\n\n\nconst App = () => {\n    return (\n        <TaskListContextProvider>\n            <div className=\"container\">\n                <div className=\"app-wrapper\">\n                    <Header />\n                    <div className=\"main\">\n                    <TaskForm />\n                    <TaskList />\n                    </div>\n                </div>\n            </div>\n        </TaskListContextProvider>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}